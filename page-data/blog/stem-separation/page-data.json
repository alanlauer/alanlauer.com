{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/blog/stem-separation/",
    "result": {"data":{"mdx":{"id":"2a5a8e4d-b5be-5430-915e-0c09ec28b235","tableOfContents":{},"fields":{"title":"Stem Separation","slug":"/blog/stem-separation/","url":"https://alanlauer.github.io/alanlauer.com/alanlauer.com/blog/stem-separation/","editUrl":"https://github.com/alanlauer/alanlauer.com/tree/master/content/blog/stem-separation.mdx","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024","gitCreatedAt":"2024-09-07T06:27:24.000Z","shouldShowTitle":true},"frontmatter":{"title":"Stem Separation","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Stem Separation\",\n  \"slug\": \"stem-separation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"So, you'd like to \\\"separate the stems\\\" of a song -- you want to take the mixed version you've got in an .mp3 or .wav or .aiff or whatever and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"separate\"), \" it into it's constitent tracks: vocals, drums, bass, and ... \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"other\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"How can you achieve this magic?\"))), mdx(\"p\", null, \"SHORT ANSWER: use this:\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s\"\n  }, \"Kajise's Demucs_v4-FT_4s\")), mdx(\"p\", null, \"LONGER ANSWER: I'll give you a bit of context because it will help you understand how to get the best results.\"), mdx(\"p\", null, \"The best model right now is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"demucs\"), \". It has several modes, but generally separates into four stems entitled vocals, drums, bass, and other.\"), mdx(\"p\", null, \"When using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"demucs\"), \", there are many different pre-trained models\\xA0that you can choose from. The best ones are these two:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"htdemucs\"), \": first version of Hybrid Transformer Demucs. Trained on MusDB + 800 songs. Default model.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"htdemucs_ft\"), \": fine-tuned version of\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"htdemucs\"), \", separation will take 4 times more time but might be a bit better. Same training set as\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"htdemucs\"), \".\"))), mdx(\"p\", null, \"That \\\"fine-tuned\\\" version has given me the best results. Especially on bass -- other pre-trained models are much much worse on bass. ... but the \\\"fine-tuned\\\" version is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"slow\")), \".\"), mdx(\"p\", null, \"OK, so -- \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"the software\")), \" -- from easy/default to hard/customizable:\"), mdx(\"p\", null, \"1.\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/spaces/sparanoid/demucs-gpu\"\n  }, \"sparanoid's demucs-gpu\"), \" -- 4-stem separation in the cloud AND running on a GPU so it's faster. This one isn't the best model... but, again, it's fast. Sometimes, it's not available (likely because it costs the creator money to run it on a GPU in the cloud).\"), mdx(\"p\", null, \"2.\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s\"\n  }, \"Kajise's Demucs_v4-FT_4s\"), \" -- the one I've used most often... in the cloud, best model, slow.\"), mdx(\"p\", null, \"3.\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/spaces/Kevin676/Demucs_v4\"\n  }, \"Kevin676's Demucs_v4\"), \" OR\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://huggingface.co/spaces/RockmanYang/Demucs_v4_2s_HT\"\n  }, \"RockmanYang's Demucs_v4_2s_HT\"), \" -- KARAOKE MODE: if you just want to extract two stems: vocals\\xA0+ instrumental.\"), mdx(\"p\", null, \"4.\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Anjok07/ultimatevocalremovergui\"\n  }, \"Ultimate Vocal Remover\"), \" -- this one runs on your own computer and is fully customizable. If you have a bunch of songs to do, this one is the easiest because you can build a queue and let it run overnight. If you have a video card, you might even be able to get it to run on that for faster results. I think you have to install the models before you can proceed. If you end up wanting to do this one, let's get on a Zoom. It's not that hard, but I can't remember exactly what I did to get mine running (and now mine is configured, so it's hard to tell).\"), mdx(\"p\", null, \"If you have questions, leave a comment or send me a message. Please include a description of the input you've got and the output you're hoping for.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntitle: \"Stem Separation\"\nslug: \"stem-separation\"\n---\n\nSo, you'd like to \"separate the stems\" of a song -- you want to take the mixed version you've got in an .mp3 or .wav or .aiff or whatever and _separate_ it into it's constitent tracks: vocals, drums, bass, and ... _other_.\n\n**_How can you achieve this magic?_**\n\nSHORT ANSWER: use this: [Kajise's Demucs_v4-FT_4s](https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s)\n\nLONGER ANSWER: I'll give you a bit of context because it will help you understand how to get the best results.\n\nThe best model right now is called `demucs`. It has several modes, but generally separates into four stems entitled vocals, drums, bass, and other.\n\nWhen using `demucs`, there are many different pre-trained models that you can choose from. The best ones are these two:\n\n- `htdemucs`: first version of Hybrid Transformer Demucs. Trained on MusDB + 800 songs. Default model.\n\n- `htdemucs_ft`: fine-tuned version of `htdemucs`, separation will take 4 times more time but might be a bit better. Same training set as `htdemucs`.\n\nThat \"fine-tuned\" version has given me the best results. Especially on bass -- other pre-trained models are much much worse on bass. ... but the \"fine-tuned\" version is _**slow**_.\n\nOK, so -- **_the software_** -- from easy/default to hard/customizable:\n\n1. [sparanoid's demucs-gpu](https://huggingface.co/spaces/sparanoid/demucs-gpu) -- 4-stem separation in the cloud AND running on a GPU so it's faster. This one isn't the best model... but, again, it's fast. Sometimes, it's not available (likely because it costs the creator money to run it on a GPU in the cloud).\n\n2. [Kajise's Demucs_v4-FT_4s](https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s) -- the one I've used most often... in the cloud, best model, slow.\n\n3. [Kevin676's Demucs_v4](https://huggingface.co/spaces/Kevin676/Demucs_v4) OR [RockmanYang's Demucs_v4_2s_HT](https://huggingface.co/spaces/RockmanYang/Demucs_v4_2s_HT) -- KARAOKE MODE: if you just want to extract two stems: vocals + instrumental.\n\n4. [Ultimate Vocal Remover](https://github.com/Anjok07/ultimatevocalremovergui) -- this one runs on your own computer and is fully customizable. If you have a bunch of songs to do, this one is the easiest because you can build a queue and let it run overnight. If you have a video card, you might even be able to get it to run on that for faster results. I think you have to install the models before you can proceed. If you end up wanting to do this one, let's get on a Zoom. It's not that hard, but I can't remember exactly what I did to get mine running (and now mine is configured, so it's hard to tell).\n\nIf you have questions, leave a comment or send me a message. Please include a description of the input you've got and the output you're hoping for.","excerpt":"So, you'd like to \"separate the stems\" of a song -- you want to take the mixed version you've got in an .mp3 or .wav or .aiff or whatever a…","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/blog/stem-separation/","sidebarItems":[{"title":"Content","items":[{"title":" Home","url":"/","items":[]},{"title":"About","url":"/about/","items":[]},{"title":"Blog","url":"/blog/","items":[{"title":"Audio And Visual Programming","url":"/blog/audio-and-visual-programming/","items":[]},{"title":"Bands I Was In","url":"/blog/bands-I-was-in/","items":[]},{"title":"Better Drumming","url":"/blog/better-drumming/","items":[]},{"title":"Cableships","url":"/blog/cableships/","items":[]},{"title":"Creative Skateboarders","url":"/blog/creative-skateboarders/","items":[]},{"title":"Docs (Example)","url":"","items":[{"title":"Features","url":"","items":[{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/","items":[]},{"title":"Graph Visualization","url":"/blog/docs (example)/features/graph-visualization/","items":[]},{"title":"Link Reference Definitions","url":"/blog/docs (example)/features/link-reference-definitions/","items":[]},{"title":"Note Properties","url":"/blog/docs (example)/features/note-properties/","items":[]},{"title":"Note Templates","url":"/blog/docs (example)/features/note-templates/","items":[]},{"title":"Spell Checking","url":"/blog/docs (example)/features/spell-checking/","items":[]},{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/","items":[]},{"title":"Wiki Links","url":"/blog/docs (example)/features/wiki-links/","items":[]}]},{"title":"How-To","url":"","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/","items":[]},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/","items":[]},{"title":"Use Keyboard Shortcuts for Editing","url":"/blog/docs (example)/how-to/use-keyboard-shortcuts-for-editing/","items":[]},{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/","items":[]}]}]},{"title":"Favorite GIFs","url":"/blog/favorite-gifs/","items":[]},{"title":"Learning and Certifications","url":"/blog/learning-and-certifications/","items":[]},{"title":"Spray Painting","url":"/blog/spray-painting/","items":[]},{"title":"Stem Separation","url":"/blog/stem-separation/","items":[]}]},{"title":"Contact","url":"/contact/","items":[]}]}],"tagsGroups":[{"title":"Daily","type":"tag","url":"/tags/daily/","items":[{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/"}]},{"title":"Graph","type":"tag","url":"/tags/graph/","items":[{"title":"Graph Visualization","url":"/blog/docs (example)/features/graph-visualization/"}]},{"title":"How-to","type":"tag","url":"/tags/how-to/","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/"},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/blog/docs (example)/features/link-reference-definitions/"},{"title":"Wiki Links","url":"/blog/docs (example)/features/wiki-links/"}]},{"title":"Notes","type":"tag","url":"/tags/notes/","items":[{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/"},{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/"}]},{"title":"Properties","type":"tag","url":"/tags/properties/","items":[{"title":"Note Properties","url":"/blog/docs (example)/features/note-properties/"}]},{"title":"Shortcut","type":"tag","url":"/tags/shortcut/","items":[{"title":"Use Keyboard Shortcuts for Editing","url":"/blog/docs (example)/how-to/use-keyboard-shortcuts-for-editing/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Spell Checking","url":"/blog/docs (example)/features/spell-checking/"},{"title":"Note Templates","url":"/blog/docs (example)/features/note-templates/"}]},{"title":"VsCode","type":"tag","url":"/tags/vs-code/","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/"},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/"}]},{"title":"Writing","type":"tag","url":"/tags/writing/","items":[{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/"}]},{"title":"my-tag1","type":"tag","url":"/tags/my-tag-1/","items":[{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/"}]},{"title":"my-tag2","type":"tag","url":"/tags/my-tag-2/","items":[{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/"}]}],"latestPosts":[{"fields":{"slug":"/blog/audio-and-visual-programming/","title":"Audio And Visual Programming","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/bands-I-was-in/","title":"Bands I Was In","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/better-drumming/","title":"Better Drumming","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/cableships/","title":"Cableships","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/","title":"Blog","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/favorite-gifs/","title":"Favorite GIFs","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/spray-painting/","title":"Spray Painting","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/learning-and-certifications/","title":"Learning and Certifications","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/stem-separation/","title":"Stem Separation","lastUpdatedAt":"2024-09-07T06:27:24.000Z","lastUpdated":"9/6/2024"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/about/","title":"About","lastUpdatedAt":"2023-06-08T04:28:35.000Z","lastUpdated":"6/7/2023"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}