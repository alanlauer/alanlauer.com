{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/blog/docs (example)/how-to/write-notes-in-foam/",
    "result": {"data":{"mdx":{"id":"8fc31a17-a8f1-54fe-9749-d0aa451c250a","tableOfContents":{"items":[{"url":"#foam-syntax","title":"Foam Syntax"},{"url":"#markdown-syntax","title":"Markdown Syntax"}]},"fields":{"title":"Writing Notes","slug":"/blog/docs (example)/how-to/write-notes-in-foam/","url":"https://alanlauer.github.io/alanlauer.com/alanlauer.com/blog/docs (example)/how-to/write-notes-in-foam/","editUrl":"https://github.com/alanlauer/alanlauer.com/tree/master/blog/docs (example)/how-to/write-notes-in-foam.md","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023","gitCreatedAt":"2023-06-01T14:10:25.000Z","shouldShowTitle":true},"frontmatter":{"title":"Writing Notes","description":null,"imageAlt":null,"tags":["Notes","Writing"],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Writing Notes\",\n  \"tags\": [\"Notes\", \"Writing\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Notes are simple text files with some extra flavor, in the shape of Markdown syntax and support for extra properties (see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/blog/docs%20(example)/features/note-properties/\",\n    \"title\": \"Note Properties\"\n  }, \"note-properties\"), \").\"), mdx(\"h2\", {\n    \"id\": \"foam-syntax\"\n  }, \"Foam Syntax\"), mdx(\"p\", null, \"Foam uses standard markdown, with a few added twists:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the title of a note (e.g. in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/graph-visualization/\",\n    \"title\": \"Graph Visualization\"\n  }, \"graph-visualization\"), \") is given by precedence based on:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \" property (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/note-properties/\",\n    \"title\": \"Note Properties\"\n  }, \"note-properties\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the first \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"# heading 1\"), \"  of the file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the file name\")))), mdx(\"h2\", {\n    \"id\": \"markdown-syntax\"\n  }, \"Markdown Syntax\"), mdx(\"p\", null, \"With markdown we can style our notes in a simple way, while keeping the document a simple text file (the best way to future-proof your writings!).\"), mdx(\"p\", null, \"You can see the formatted output by running the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Markdown: Open Preview to the Side\"), \" command.\"), mdx(\"p\", null, \"Here is a high level overview of Markdown, for more information on the markdown syntax \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://commonmark.org/help/\"\n  }, \"see here\"), \".\"), mdx(\"p\", null, \"This is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.google.com\"\n  }, \"link to google\"), \".\"), mdx(\"p\", null, \"This is a wiki link (aka internal link) to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/blog/docs%20(example)/features/note-properties/\",\n    \"title\": \"Note Properties\"\n  }, \"note-properties\"), \".\"), mdx(\"p\", null, \"Here is an image:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"../../attachments/foam-icon.png\",\n    \"alt\": \"image\"\n  })), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"this is a blockquote\\nit can span multiple lines\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list item\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list item\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"list item\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"One\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Two\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Three\")), mdx(\"p\", null, \"This text is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"in bold\"), \" and this is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"italic\"), \".\"), mdx(\"p\", null, \"The following is a horizontal rule\"), mdx(\"hr\", null), mdx(\"p\", null, \"This is a table:\\n| Column 1 | Column 2 |\\n| -------- | -------- |\\n| R1C1     | R1C2     |\\n| R2C1     | R2C2     |\"), mdx(\"p\", null, \"You can \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline code\"), \" or\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"you can create\\ncode blocks\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntitle: Writing Notes\ntags:\n  - Notes\n  - Writing\n---\n\nNotes are simple text files with some extra flavor, in the shape of Markdown syntax and support for extra properties (see [[note-properties]]).\n\n## Foam Syntax\n\nFoam uses standard markdown, with a few added twists:\n- the title of a note (e.g. in the [[graph-visualization]]) is given by precedence based on:\n  - the `title` property (see [[note-properties]])\n  - the first `# heading 1`  of the file\n  - the file name\n\n\n## Markdown Syntax\nWith markdown we can style our notes in a simple way, while keeping the document a simple text file (the best way to future-proof your writings!).\n\nYou can see the formatted output by running the `Markdown: Open Preview to the Side` command.\n\nHere is a high level overview of Markdown, for more information on the markdown syntax [see here](https://commonmark.org/help/).\n\nThis is a [link to google](https://www.google.com).\n\nThis is a wiki link (aka internal link) to [[note-properties]].\n\nHere is an image:\n![image](../../attachments/foam-icon.png)\n\n> this is a blockquote\n> it can span multiple lines\n\n- list item\n- list item\n- list item\n\n1. One\n2. Two\n3. Three\n\nThis text is **in bold** and this is *italic*.\n\nThe following is a horizontal rule\n\n---\n\nThis is a table:\n| Column 1 | Column 2 |\n| -------- | -------- |\n| R1C1     | R1C2     |\n| R2C1     | R2C2     |\n\nYou can `inline code` or\n```\nyou can create\ncode blocks\n```\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[note-properties]: ../features/note-properties.md \"Note Properties\"\n[graph-visualization]: ../features/graph-visualization.md \"Graph Visualization\"\n[//end]: # \"Autogenerated link references\"","excerpt":"Notes are simple text files with some extra flavor, in the shape of Markdown syntax and support for extra properties (see [ note-propertiesâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Graph Visualization\",\n  \"tags\": [\"Graph\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Foam comes with a graph visualization of your notes.\\nTo see the graph execute the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Show Graph\"), \" command.\"), mdx(\"h2\", {\n    \"id\": \"graph-navigation\"\n  }, \"Graph Navigation\"), mdx(\"p\", null, \"With the graph you can:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"highlight a node by hovering on it, to quickly see how it's connected to the rest of your notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"select one or more (by keeping \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shift\"), \" pressed while selecting) nodes by clicking on them, to better understand the structure of your notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"navigate to a note by clicking on it while pressing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ctrl\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cmd\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automatically center the graph on the currently edited note, to immediately see its connections\")), mdx(\"h2\", {\n    \"id\": \"custom-graph-styles\"\n  }, \"Custom Graph Styles\"), mdx(\"p\", null, \"By default the Foam graph will use the VsCode theme, but it's possible to customize it with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam.graph.style\"), \" setting.\"), mdx(\"p\", null, \"A sample configuration object is provided below, you can provide as many or as little configuration as you wish:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"foam.graph.style\\\": {\\n    \\\"background\\\": \\\"#202020\\\",\\n    \\\"fontSize\\\": 12,\\n    \\\"highlightedForeground\\\": \\\"#f9c74f\\\",\\n    \\\"node\\\": {\\n        \\\"note\\\": \\\"#277da1\\\",\\n        \\\"placeholder\\\": \\\"#545454\\\",\\n        \\\"feature\\\": \\\"green\\\",\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"note\"), \" defines the color for regular nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placeholder\"), \" defines the color for links that don't match any existing note. This is a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/placeholder/\",\n    \"title\": \"placeholder\"\n  }, \"placeholder\"), \" because no file with such name exists (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/wiki-links/\",\n    \"title\": \"Wiki Links\"\n  }, \"wiki-links\"), \" for more info).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"feature\"), \" shows an example of how you can use note types to customize the graph. It defines the color for the notes of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"feature\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/note-properties/\",\n    \"title\": \"Note Properties\"\n  }, \"note-properties\"), \" for details\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can have as many types as you want\")))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/blog/docs (example)/features/graph-visualization/","title":"Graph Visualization","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Note Properties\",\n  \"type\": \"feature\",\n  \"keywords\": \"hello world\",\n  \"tags\": [\"Properties\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"At the top of the file you can have a section where you define your properties.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Be aware that this section needs to be at the very top of the file to be valid\")), mdx(\"p\", null, \"For example, for this file, we have:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"---\\ntype: feature\\nkeywords: hello world\\n---\\n\")), mdx(\"p\", null, \"Those are properties.\\nProperties can be used to organize your notes.\"), mdx(\"h2\", {\n    \"id\": \"special-properties\"\n  }, \"Special Properties\"), mdx(\"p\", null, \"Some properties have special meaning for Foam:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \" property will assign the name to the note that you will see in the graph, regardless of the filename or the first heading (also see how to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/how-to/write-notes-in-foam/\",\n    \"title\": \"Writing Notes\"\n  }, \"write-notes-in-foam\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \" property can be used to style notes differently in the graph (also see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/graph-visualization/\",\n    \"title\": \"Graph Visualization\"\n  }, \"graph-visualization\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tags\"), \" property can be used to add tags to a note (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/blog/docs%20(example)/features/tags-and-tag-explorer/\",\n    \"title\": \"Tags and Tag Explorer\"\n  }, \"tags-and-tag-explorer\"), \")\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/blog/docs (example)/features/note-properties/","title":"Note Properties","shouldShowTitle":true}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[{"frontmatter":{"title":"Daily Notes","tags":["Notes","Daily"]},"fields":{"slug":"/blog/docs (example)/features/daily-notes/","title":"Daily Notes","lastUpdated":"6/1/2023","lastUpdatedAt":"2023-06-01T14:10:25.000Z","gitCreatedAt":"2023-06-01T14:10:25.000Z"}},{"frontmatter":{"title":"Writing Notes","tags":["Notes","Writing"]},"fields":{"slug":"/blog/docs (example)/how-to/write-notes-in-foam/","title":"Writing Notes","lastUpdated":"6/1/2023","lastUpdatedAt":"2023-06-01T14:10:25.000Z","gitCreatedAt":"2023-06-01T14:10:25.000Z"}}]}},"pageContext":{"tags":["Notes","Writing"],"slug":"/blog/docs (example)/how-to/write-notes-in-foam/","sidebarItems":[{"title":"Content","items":[{"title":" Home","url":"/","items":[]},{"title":"About","url":"/about/","items":[]},{"title":"Blog","url":"/blog/","items":[{"title":"Audio And Visual Programming","url":"/blog/audio-and-visual-programming/","items":[]},{"title":"Bands I Was In","url":"/blog/bands-I-was-in/","items":[]},{"title":"Better Drumming","url":"/blog/better-drumming/","items":[]},{"title":"Cableships","url":"/blog/cableships/","items":[]},{"title":"Creative Skateboarders","url":"/blog/creative-skateboarders/","items":[]},{"title":"Docs (Example)","url":"","items":[{"title":"Features","url":"","items":[{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/","items":[]},{"title":"Graph Visualization","url":"/blog/docs (example)/features/graph-visualization/","items":[]},{"title":"Link Reference Definitions","url":"/blog/docs (example)/features/link-reference-definitions/","items":[]},{"title":"Note Properties","url":"/blog/docs (example)/features/note-properties/","items":[]},{"title":"Note Templates","url":"/blog/docs (example)/features/note-templates/","items":[]},{"title":"Spell Checking","url":"/blog/docs (example)/features/spell-checking/","items":[]},{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/","items":[]},{"title":"Wiki Links","url":"/blog/docs (example)/features/wiki-links/","items":[]}]},{"title":"How-To","url":"","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/","items":[]},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/","items":[]},{"title":"Use Keyboard Shortcuts for Editing","url":"/blog/docs (example)/how-to/use-keyboard-shortcuts-for-editing/","items":[]},{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/","items":[]}]}]},{"title":"Favorite GIFs","url":"/blog/favorite-gifs/","items":[]},{"title":"Learning and Certifications","url":"/blog/learning-and-certifications/","items":[]},{"title":"Spray Painting","url":"/blog/spray-painting/","items":[]},{"title":"Stem Separation","url":"/blog/stem-separation/","items":[]}]},{"title":"Contact","url":"/contact/","items":[]}]}],"tagsGroups":[{"title":"Daily","type":"tag","url":"/tags/daily/","items":[{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/"}]},{"title":"Graph","type":"tag","url":"/tags/graph/","items":[{"title":"Graph Visualization","url":"/blog/docs (example)/features/graph-visualization/"}]},{"title":"How-to","type":"tag","url":"/tags/how-to/","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/"},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/"}]},{"title":"Link","type":"tag","url":"/tags/link/","items":[{"title":"Link Reference Definitions","url":"/blog/docs (example)/features/link-reference-definitions/"},{"title":"Wiki Links","url":"/blog/docs (example)/features/wiki-links/"}]},{"title":"Notes","type":"tag","url":"/tags/notes/","items":[{"title":"Daily Notes","url":"/blog/docs (example)/features/daily-notes/"},{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/"}]},{"title":"Properties","type":"tag","url":"/tags/properties/","items":[{"title":"Note Properties","url":"/blog/docs (example)/features/note-properties/"}]},{"title":"Shortcut","type":"tag","url":"/tags/shortcut/","items":[{"title":"Use Keyboard Shortcuts for Editing","url":"/blog/docs (example)/how-to/use-keyboard-shortcuts-for-editing/"}]},{"title":"Templates","type":"tag","url":"/tags/templates/","items":[{"title":"Note Templates","url":"/blog/docs (example)/features/note-templates/"},{"title":"Spell Checking","url":"/blog/docs (example)/features/spell-checking/"}]},{"title":"VsCode","type":"tag","url":"/tags/vs-code/","items":[{"title":"Getting started with VsCode","url":"/blog/docs (example)/how-to/get-started-with-vscode/"},{"title":"Paste Images from Clipboard","url":"/blog/docs (example)/how-to/paste-images-from-clipboard/"}]},{"title":"Writing","type":"tag","url":"/tags/writing/","items":[{"title":"Writing Notes","url":"/blog/docs (example)/how-to/write-notes-in-foam/"}]},{"title":"my-tag1","type":"tag","url":"/tags/my-tag-1/","items":[{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/"}]},{"title":"my-tag2","type":"tag","url":"/tags/my-tag-2/","items":[{"title":"Tags and Tag Explorer","url":"/blog/docs (example)/features/tags-and-tag-explorer/"}]}],"latestPosts":[{"fields":{"slug":"/contact/","title":"Contact","lastUpdatedAt":"2023-06-08T04:28:35.000Z","lastUpdated":"6/7/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/about/","title":"About","lastUpdatedAt":"2023-06-08T04:28:35.000Z","lastUpdated":"6/7/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":" Home","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/creative-skateboarders/","title":"Creative Skateboarders","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/blog/docs (example)/features/daily-notes/","title":"Daily Notes","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Notes","Daily"]}},{"fields":{"slug":"/blog/docs (example)/features/graph-visualization/","title":"Graph Visualization","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Graph"]}},{"fields":{"slug":"/blog/docs (example)/features/link-reference-definitions/","title":"Link Reference Definitions","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Link"]}},{"fields":{"slug":"/blog/docs (example)/features/note-properties/","title":"Note Properties","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Properties"]}},{"fields":{"slug":"/blog/docs (example)/features/note-templates/","title":"Note Templates","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Templates"]}},{"fields":{"slug":"/blog/docs (example)/features/spell-checking/","title":"Spell Checking","lastUpdatedAt":"2023-06-01T14:10:25.000Z","lastUpdated":"6/1/2023"},"frontmatter":{"draft":false,"tags":["Templates"]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}