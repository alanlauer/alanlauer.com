{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/","title":" Home"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \" Home\"\nslug: \"home\"\nnote: {/* note the space character hack to make this the top item in the list */}\n---\nWelcome to the site. üëã"},{"fields":{"slug":"/about/","title":"About"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"About\"\nslug: \"about\"\n---\n\nLadies and gentlemen, Alan Lauer in one image:\n\n![Alan Lauer playing bass as a member of Big Bill as they perform for hundreds of children and their parents at the final show of the 2023 KUTX \"Rock The Park\" season held at the Mueller Lake Park Amphitheater in Austin, TX.](./hero.jpg)\n\nI'm **Alan Lauer** -- I'm an IT Major Incident Manager from Austin, Texas. I play drums in one band, and bass in another. I have two pugs and I'm married. I enjoy travelling to experience local cultures. I speak German."},{"fields":{"slug":"/blog/audio-and-visual-programming/","title":"Audio And Visual Programming"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Audio And Visual Programming\"\nslug: \"audio-and-visual-programming\"\n---\n\nProcessing *(programming language)* examples:\nhttp://www.generative-gestaltung.de/2/\n\nLive audio coding as art: https://supercollider.github.io/\nhttps://www.youtube.com/watch?v=3UGO-qJ6Qdo\n\nSplice, a sample subscription service:\nhttps://splice.com/\n\nThat crazy effects pedal manufacturer:\nhttps://www.chasebliss.com/\n\n...and it looks like they use an STM32 in their pedals:\nhttps://www.youtube.com/watch?v=YEiZHvGu-L4\n\nGuitar pedals that accept CV (2023):\nhttps://delicious-audio.com/best-pedals-for-synths-with-cv-in-out/\n\n...and apparently *expression pedal inputs are kind of CV???*\nhttps://www.perfectcircuit.com/signal/expression-pedal-cv\n\nEurorack guitar pedal (discontinued):\nhttps://pittsburghmodular.com/patch-box\n\n...and there's this crazy thing:\nhttps://empresseffects.com/products/zoia\n\n...and a couple of ESP32 DIY guitar pedals that people have had limited success with:\nhttps://hackaday.io/project/164477/gallery#3656adbd177b3ba30d4947df606e6335\nhttps://www.deeptronic.com/blackstomp/\n\n...a great and simple ESP32 walkie talkie project:\nhttps://youtu.be/d_h38X4_eQQ?si=Wq3Oj31eDfs0QtKF\n\n...and this is the audio programming guy I like talking about the JS library I couldn't remember, tone.js (I know you said you don't like ECMA, but I still think this is interesting):\nhttps://youtu.be/8u1aQdG5Nrk?si=wi7enKOS76ITtOux\n\nAlso, I found a C++ library for audio programming:\nhttps://juce.com/ ... but I was unable to find good examples of anyone using this with an ESP32 to make an effects pedal or anything similar.\n\nA video describing how to build an audio processor using an ESP32 board:\nhttps://www.youtube.com/watch?v=a936wNgtcRA\n\nArduino Audio Tools library for ESP32:\nhttps://github.com/pschatzmann/arduino-audio-tools\n\nC++ https://essentia.upf.edu/\nPython https://github.com/spotify/pedalboard\n\nhttps://www.embedic.com/technology/details/esp32-vs-arduino--what-are-differences-and-how-to-choose"},{"fields":{"slug":"/blog/bands-I-was-in/","title":"Bands I Was In"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Bands I Was In\"\nslug: \"bands-I-was-in\"\n---\n\nSince the start of the pandemic, I've been kicked out of four bands...\n\n- Astro Alloy\n  - _2020-10-01 - 2020-11-30_\n  - a few practices and many feedback sessions on the band and sound after I was replaced\n  - \"I've found a wild young drummer who has never been in a band and who wants to practice every day.\"\n\n- Last Ride In\n  - _2020-12-09 - 2021-02-10_\n  - 3 practices... felt like more\n  - \"We decided to go with an old friend.\"\n\n- Rad Gnar\n  - *2022-02-10 - 2023-08-27*\n  - ~60 practices, countless strategy discussions, and an EP\n  - \"You aren't committed enough.\"\n\n- Death Party\n  - _2024-01-21 - 2024-02-23_\n  - \"I found someone more permanent.\"\n\n<p/>\n\nI'm still kind of reeling from all of this. Like am I not a great drummer? LOL\n\nIt's caused me to spend some time thinking about my shortcomings as a musician and a person...\n\n1. I over-commit. I don't think I should be in more than one band.\n2. I'm undisciplined -- I don't practice alone often.\n3. I struggle to learn songs... I don't have a standard method.\n4. When I start working with a band, I need to clarify what we all want and our expectations.\n\n## Other Bands I Was In\n\n- Ian and Alex\n- Burnt Out\n- Room 101\n- Molotov Justice\n- Zach Edwards\n- Ice Eater\n- Better Than Nothing\n- Ramones (Max Obeiden)\n- Church band\n- Nathan Phennel\n- Math Man\n- Jizz and the Jerkoffs\n- Dansu\n- Dead Right There\n- Zest of Yore\n- The Cocker Spaniels\n- Big Bill\n- Horrible Friend (ska band)\n- Youth of America (Wipers cover band)\n- Rage Against The Machine cover band\n- Belt to Spell (Built to Spill cover band)\n- Rust Never Sleeps (Neil Young cover band)\n\n## Bands I've Tried Out For But Didn't Make It\n\n- The Baker Family\n- Fishboy\n- Country band (Some of the lyrics were \"Wyoming... it's a thousand miles from nothing cept my old pony and the blowin wind... and the road it keeps me runnin from all the trouble that I'm in\" -- I was referred by Burton Lee)\n"},{"fields":{"slug":"/blog/better-drumming/","title":"Better Drumming"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Better Drumming\"\nslug: \"better-drumming\"\n---\n\nI've felt like I've been plateaued on the drums for a while. I did make some real progress during the pandemic when I set up a huge drum set, but I still struggle with some things. This article will be an ever growing list of practice strategies, tips and tricks, areas to focus on, and other things I've found helpful in improving my drum (or just feeling better about it).\n\nHere's an interesting video: [5 Reasons You‚Äôre Still an Intermediate Drummer](https://www.youtube.com/watch?v=F8UvijtZQo4&list=WL&index=1) by [The 80/20 Drummer](https://www.youtube.com/@8020drummer)\n\n## Here are the Areas he mentions to work on:\n\n### Subdivisions\nNotes should fall on the matrix -- quarter notes should be a quarter of the measure long, eigths should be an eigth of the measure long... and tempo needs to be consistent. This is extra important for linear playing. You can vary this for various feels, but consistent subdivisions are a good foundation.\n\n### Zones\nPlay your drums in the center consistently. Play rimshots consistently. Be able to reproduce a sound consistently. Know where certain good sounds come from and be able to get to those places consistently.\n\n### Stick Height\nGhost notes should be an inch above the drum. Accents should be a foot above the drum. They should sound very different, and you should be able to control how different they sound.\n\n### Voicing\nDevelop control over the volume of each drum independently. Vary those volumes based on the genre or the part of the song... and be able to not vary it if needed.\n\n### Macrotime\nDevelop the ability to maintain a consistent tempo from the beginning of a song to the end. Develop the ability to feel the \"correct\" metronomic pulse even when your playing is varying the time -- stretching and compressing.\n\n## How to Practice These Things\n\n### Building skills...\n\n1. Paradiddles with accents. - Subdivisions/Stick Height\n2. Add orchestration. - Stick Height/Zones/Voicing\n3. Play a basic beat. - Voicing\n4. Play a linear hand beat. - All\n5. Add the kick. - All\n\n### Let's incorporate Macrotime...\n\n7. Play a beat with the metronome on 16ths.\n8. Try a switching (roll) beat.\n9. Try a linear beat.\n10. Move the metronome to offbeat 8ths or 16ths. (This forces you to create the time and the metronome checks you.)\n11. Progress toward just having the metronome on beat 4. This is a Macrotime test.\n\n## Some additional things to add:\n\nControl Your Emotions\nMaintain control of each area when you're excited... or don't get excited.\n\nDon't flam. Be able not to flam.\n\nAn interesting idea: https://www.jazzadvice.com/lessons/develop-a-stronger-sense-of-time-using-a-metronome-on-2-4/"},{"fields":{"slug":"/contact/","title":"Contact"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Contact\"\nslug: \"contact\"\n---\n\nReach me on [Instagram](https://www.instagram.com/247alan/)."},{"fields":{"slug":"/blog/cableships/","title":"Cableships"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Cableships\"\nslug: \"cableships\"\n---\n\n### Activists and Cableships\n\nI used to work for eBay as a MIM for their backbone network -- they have a semi-global network of leased circuits that their corporate and \"ebay.com\" networks ride upon... kinda like another vendor between those business units and the circuit providers from which the logical circuits are leased.\n \nAnyway, fiber cuts were our day-in, day-out. I can think of two interesting scenarios...\n \nOne was when the ... climate-? anti-technology-? ... activists were repeatedly cutting or shot-gunning transcontinental fibers in the California desert. And they would strategically pick the ones that were on railroad easements. So then the fiber company would have to coordinate with the railroad to STOP TRAINS before they could go in and fix them out in the middle of nowhere.\n \nAnd the other interesting scenario is when the trans-oceanic fibers ([‚Å†map](https://www.submarinecablemap.com/)) are cut. The ‚Å†[cable layer ships](https://globalmarine.co.uk/vessels-trenching-assets/) they use to fix these cuts are fascinating. They have a [gigantic spool of fiber](https://www.vanoord.com/en/equipment/cable-laying-equipment/) on them, and often carry a submersible. And you can [track the ships](LINK-NEEDED). Sometimes those cables are down for a looooooong time, like [this one in Tonga that was down for 18 months due to a volcanic eruption](https://subtelforum.com/tonga-cable-fixed-18-months-post-eruption/)... We used to get status emails saying that the ship would arrive at the cable in 10 days, 8 days, 5 days ‚Äì ship has been diverted due to weather ‚Äì 14 days, 10 days ‚Äì incoming hurricane. It would go on and on like that LOL\n"},{"fields":{"slug":"/blog/","title":"Blog"},"frontmatter":{"draft":false},"rawBody":"# Blog\n@alan, this is probably unnecesary but I wanted to illustrate that folders can have index.md files as well. "},{"fields":{"slug":"/blog/favorite-gifs/","title":"Favorite GIFs"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Favorite GIFs\"\nslug: \"favorite-gifs\"\n---\n\n* Oprah Winfrey BEES ([‚Å†gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExeXZta2M4eHBwenZsMnMxaTY0MmxvaGlqNTV5YmRiZmpoZ2gyYWJzNCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dcubXtnbck0RG/giphy.gif))\n\n![Oprah Winfrey BEES gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExeXZta2M4eHBwenZsMnMxaTY0MmxvaGlqNTV5YmRiZmpoZ2gyYWJzNCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dcubXtnbck0RG/giphy.gif)\n\n* Scared Donald Trump ([‚Å†gif](https://media.giphy.com/media/3o7WTCBePyp2GCamIM/giphy.gif))\n\n![Scared Donald Trump gif](https://media.giphy.com/media/3o7WTCBePyp2GCamIM/giphy.gif)\n\n<!-- * Template ([‚Å†gif](URLhere))\n![Template gif](URLhere) -->"},{"fields":{"slug":"/blog/spray-painting/","title":"Spray Painting"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Spray Painting\"\nslug: \"spray-painting\"\n---\n\n* Minimize wind\n* Temps between 65 and 85\n* Humidity below 40%\n* Build a spray booth - tall, stable, lit well, sealable, ventilated (negative pressure)\n* Clean out the dust from the booth between jobs/colors\n* Hang your pieces so you can spin them, but think about reaching the top and bottom\n* Overspray is a bitch -- consider it and get out of the way!\n* Sand\n* Prime\n* Shake\n* Use thinner coats than you think!\n* More coats is better than thicker coats\n* If not smooth, clean between coats\n* Shake while painting\n* Fluid strokes\n* Double final drying time to fully cure\n* Read and exceed the instructions\n* Spin the piece\n* Clean with mineral spirits before painting\n* All coats within one hour!\n* Surface should be smooth after each coat of primer and paint\n* Hanging is best; triangles can scratch your fresh paint\n* Microfiber cloth\n* Remove all rust, mill scale, oil with a grinder\n* CLEAN THE SURFACE BEFORE STARTING by any means necessary\n* After painting, clear the nozzle by spraying upside down\n\n<p/>\n\nThis is a great article: [In My Own Style: How to Spray Paint](https://inmyownstyle.com/spray-paint-faqs#:~:text=Powder%20residue%20after%20spray%20painting,the%20can%20too%20far%20away). My outline above was written after my experience following the instructions at *In My Style*."},{"fields":{"slug":"/blog/learning-and-certifications/","title":"Learning and Certifications"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: \"Learning and Certifications\"\r\nslug: \"learning-and-certifications\"\r\n---\r\n\r\n_(loosely from used most/best to used least/worst)_\r\n\r\n[A Cloud Guru](https://learn.acloud.guru/home) - Linux, Cloud, Python. I got a Linux Essentials cert through an older version of this site (\"Linux Academy\"), and I'm working on Python topics. Very good content! Owned by Pluralsight now.\r\n\r\n[GameDev.tv](https://www.gamedev.tv/dashboard?) - Godot 4. Well-respected.\r\n\r\n[Humble Bundle purchases](https://www.humblebundle.com/home/purchases) - I've bought so many educational book bundles. Search \"book.\"\r\n\r\n[Code Academy](https://www.codecademy.com/learn) - I've done some Python learning here. Not bad!\r\n\r\n[Coursera](https://www.coursera.org/) - General learning. I took a \"Learning how to Learn\" course here.\r\n\r\n[Hack The Box - Academy](https://academy.hackthebox.com/dashboard) - Ethical hacking. Very full featured and gamified. Integrated workstation and target machines.\r\n\r\n[Hack The Box - CTF](https://ctf.hackthebox.com/) - Capture the flag!\r\n\r\n[TryHackMe](https://tryhackme.com/dashboard) - Another ethical hacking site.\r\n\r\n[ByteByteGo](https://bytebytego.com/) - System design skills. Very cool text-based learning. Lots of free things.\r\n\r\n[FreeCodeCamp](https://www.freecodecamp.org/learn) - Free programming courses. Lots of interesting one-off tutorials.\r\n\r\n[Khan Academy](https://www.khanacademy.org/profile/me/courses) - General learning on a variety of topics. Targeted mostly at younger learners, but lots of higher-level content, too.\r\n\r\n[Zenva](https://academy.zenva.com/) - HB: Learn GameDev with Godot, Unreal, Unity & GameMaker. Web development, Ruby, Cloud Computing, Hacking, Python. Probably not very good.\r\n\r\n[Mammoth Interactive](https://training.mammothinteractive.com/courses/enrolled) - HB: Anyone Can Learn to Code - The Complete 2023 Online Course. Probably not very good. Old.\r\n\r\n[StackSkills](https://stackskills.com/) - Web development, Ruby, Cloud Computing, Hacking, Python. Probably not very good. Old.\r\n\r\n[GlobED](https://www.globed.net/mycourses) - Networking, CCNA. Old."},{"fields":{"slug":"/blog/creative-skateboarders/","title":"Creative Skateboarders"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Creative Skateboarders\"\nslug: \"creative-skateboarders\"\n---\n\n![Rodney Mullen doing some weird shit](./hero.jpg)\n\n[Kilian Martin](https://www.youtube.com/watch?v=WDH6Q22d1zo)\n\n[Mark Gonzales](https://www.youtube.com/watch?v=64GqVAwZzJA)\n\n[Almir Jusovic](https://www.youtube.com/watch?v=j1IUNOv1xKE)\n\n[Matt Tomasello](https://www.youtube.com/watch?v=c2zIto55QlQ)\n\n[Fancy Lad Skateboards](https://www.fancyladskateboards.com/pages/videos)\n\n---\n\nSources:\n\n[Kilian Martin: The art of skateboarding | CNN](https://www.cnn.com/2014/10/29/sport/kilian-martin-freestyle-street-skateboarder/index.html)\n\n[Kilian Martin: A Skate Escalation - YouTube](https://www.youtube.com/watch?v=WDH6Q22d1zo)\n\n[skateboarding art film - YouTube](https://www.youtube.com/results?search_query=skateboarding+art+film)\n\n[&quot;The Legend,&quot; Mark Gonzales Finds Perfect Balance in Fine Art and Skateboarding | HYPEBEAST Diaries - YouTube](https://www.youtube.com/watch?v=64GqVAwZzJA)\n\n[JENKEM - Almir Jusovic - Unreleased Footage - World&#39;s Weirdest Skater - YouTube](https://www.youtube.com/watch?v=j1IUNOv1xKE)\n\n[JENKEM - Matt Tomasello AKA &quot;Rodney Mullen on Bath Salts&quot; - YouTube](https://www.youtube.com/watch?v=c2zIto55QlQ)\n\n[VIDEOS ‚Äì Fancy Lad Skateboards](https://www.fancyladskateboards.com/pages/videos)\n\n[The Best Skateboard Videos of the 2010s ‚Äî QS Reader Survey Results | Quartersnacks](https://quartersnacks.com/2019/11/the-best-skateboard-videos-of-the-2010s-qs-reader-survey-results/)\n\n[kilian martin - Google Search](https://www.google.com/search?gs_ssp=eJzj4tZP1zc0MsgpzCmpMmD04s3OzMlMzFPITSwqycwDAH07CVA&q=kilian+martin&oq=kilian+martin&aqs=chrome.1.0i355i512j46i512l2j0i512l3j0i22i30j69i60.3415j0j7&sourceid=chrome&ie=UTF-8)\n\n[Kilian Martin (@kilianmartinsk8) ‚Ä¢ Instagram photos and videos](https://www.instagram.com/kilianmartinsk8/?hl=en)"},{"fields":{"slug":"/blog/stem-separation/","title":"Stem Separation"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: \"Stem Separation\"\nslug: \"stem-separation\"\n---\n\nSo, you'd like to \"separate the stems\" of a song -- you want to take the mixed version you've got in an .mp3 or .wav or .aiff or whatever and _separate_ it into it's constitent tracks: vocals, drums, bass, and ... _other_.\n\n**_How can you achieve this magic?_**\n\nSHORT ANSWER: use this:¬†[Kajise's Demucs_v4-FT_4s](https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s)\n\nLONGER ANSWER: I'll give you a bit of context because it will help you understand how to get the best results.\n\nThe best model right now is called `demucs`. It has several modes, but generally separates into four stems entitled vocals, drums, bass, and other.\n\nWhen using `demucs`, there are many different pre-trained models¬†that you can choose from. The best ones are these two:\n\n- `htdemucs`: first version of Hybrid Transformer Demucs. Trained on MusDB + 800 songs. Default model.\n\n- `htdemucs_ft`: fine-tuned version of¬†`htdemucs`, separation will take 4 times more time but might be a bit better. Same training set as¬†`htdemucs`.\n\nThat \"fine-tuned\" version has given me the best results. Especially on bass -- other pre-trained models are much much worse on bass. ... but the \"fine-tuned\" version is _**slow**_.\n\nOK, so -- **_the software_** -- from easy/default to hard/customizable:\n\n1.¬†[sparanoid's demucs-gpu](https://huggingface.co/spaces/sparanoid/demucs-gpu) -- 4-stem separation in the cloud AND running on a GPU so it's faster. This one isn't the best model... but, again, it's fast. Sometimes, it's not available (likely because it costs the creator money to run it on a GPU in the cloud).\n\n2.¬†[Kajise's Demucs_v4-FT_4s](https://huggingface.co/spaces/Kajise/Demucs_v4-FT_4s) -- the one I've used most often... in the cloud, best model, slow.\n\n3.¬†[Kevin676's Demucs_v4](https://huggingface.co/spaces/Kevin676/Demucs_v4) OR¬†[RockmanYang's Demucs_v4_2s_HT](https://huggingface.co/spaces/RockmanYang/Demucs_v4_2s_HT) -- KARAOKE MODE: if you just want to extract two stems: vocals¬†+ instrumental.\n\n4.¬†[Ultimate Vocal Remover](https://github.com/Anjok07/ultimatevocalremovergui) -- this one runs on your own computer and is fully customizable. If you have a bunch of songs to do, this one is the easiest because you can build a queue and let it run overnight. If you have a video card, you might even be able to get it to run on that for faster results. I think you have to install the models before you can proceed. If you end up wanting to do this one, let's get on a Zoom. It's not that hard, but I can't remember exactly what I did to get mine running (and now mine is configured, so it's hard to tell).\n\nIf you have questions, leave a comment or send me a message. Please include a description of the input you've got and the output you're hoping for."},{"fields":{"slug":"/blog/docs (example)/features/graph-visualization/","title":"Graph Visualization"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Graph Visualization\ntags:\n  - Graph\n---\n\nFoam comes with a graph visualization of your notes.\nTo see the graph execute the `Foam: Show Graph` command.\n\n## Graph Navigation\n\nWith the graph you can:\n- highlight a node by hovering on it, to quickly see how it's connected to the rest of your notes\n- select one or more (by keeping `shift` pressed while selecting) nodes by clicking on them, to better understand the structure of your notes\n- navigate to a note by clicking on it while pressing `ctrl` or `cmd`\n- automatically center the graph on the currently edited note, to immediately see its connections\n\n## Custom Graph Styles\n\nBy default the Foam graph will use the VsCode theme, but it's possible to customize it with the `foam.graph.style` setting.\n\nA sample configuration object is provided below, you can provide as many or as little configuration as you wish:\n\n```json\n\"foam.graph.style\": {\n    \"background\": \"#202020\",\n    \"fontSize\": 12,\n    \"highlightedForeground\": \"#f9c74f\",\n    \"node\": {\n        \"note\": \"#277da1\",\n        \"placeholder\": \"#545454\",\n        \"feature\": \"green\",\n    }\n}\n```\n\n- `note` defines the color for regular nodes\n- `placeholder` defines the color for links that don't match any existing note. This is a [[placeholder]] because no file with such name exists (see [[wiki-links]] for more info).\n- `feature` shows an example of how you can use note types to customize the graph. It defines the color for the notes of type `feature`\n  - see [[note-properties]] for details\n  - you can have as many types as you want\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[wiki-links]: wiki-links.md \"Wiki Links\"\n[note-properties]: note-properties.md \"Note Properties\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/features/note-properties/","title":"Note Properties"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Note Properties\ntype: feature\nkeywords: hello world\ntags:\n  - Properties\n---\n\n\n\nAt the top of the file you can have a section where you define your properties.\n\n> Be aware that this section needs to be at the very top of the file to be valid\n\nFor example, for this file, we have:\n```\n---\ntype: feature\nkeywords: hello world\n---\n```\n\nThose are properties.\nProperties can be used to organize your notes.\n\n## Special Properties\nSome properties have special meaning for Foam:\n- the `title` property will assign the name to the note that you will see in the graph, regardless of the filename or the first heading (also see how to [[write-notes-in-foam]])\n- the `type` property can be used to style notes differently in the graph (also see [[graph-visualization]])\n- the `tags` property can be used to add tags to a note (see [[tags-and-tag-explorer]])\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[write-notes-in-foam]: ../how-to/write-notes-in-foam.md \"Writing Notes\"\n[graph-visualization]: graph-visualization.md \"Graph Visualization\"\n[tags-and-tag-explorer]: tags-and-tag-explorer.md \"Tags and Tag Explorer\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/features/spell-checking/","title":"Spell Checking"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Spell Checking\ntags:\n  - Templates\n---\n\nFoam comes with a spell checker.\n\nMisspelled words are highlighted, like hellow.\nYou can place the cursor on top of the word, and press `cmd+.` for suggestions on how to fix the problem.\n\nYou can configure the extension in the settings, for example to:\n- ignore certain files\n- change the language(s)\n- and much more\n\nFor more information go to the [Spellright extension page](https://marketplace.visualstudio.com/items?itemName=ban.spellright).\n\nThere are many spell checking extensions for VsCode.\nAnother one of our favorites is [LTeX](https://marketplace.visualstudio.com/items?itemName=valentjn.vscode-ltex&ssr=false#overview), which is a bit heavier but offers some extra functionality.\n"},{"fields":{"slug":"/blog/docs (example)/features/link-reference-definitions/","title":"Link Reference Definitions"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Link Reference Definitions\ntags:\n  - Link\n---\n\nWhen you use `[[wiki-links]]`, the [foam-vscode](https://github.com/foambubble/foam/tree/master/packages/foam-vscode) extension can generate [Markdown Link Reference Definitions](https://spec.commonmark.org/0.29/#link-reference-definitions) at the bottom of the file.\n\nThis is done to make the content of the file compatible with various Markdown tools (e.g. parsers, static site generators, VS code plugins etc), which don't support `[[wiki-links]]` directly.\n\nThis feature is disabled by default because you don't need it to navigate your workspace, it is useful for publishing and compatibility of your notes.\n\n## Example\n\nThe following example:\n  ```md\n  - [[graph-visualization]]\n  ```\n...generates the following link reference definitions to the bottom of the file:\n  ```md\n  [graph-visualization]: graph-visualization \"Graph Visualization\"\n  ```\n\n## Configuration\n\nYou can use the `foam.edit.linkReferenceDefinitions` to configure the definitions (see [[get-started-with-vscode]]):\n- `withoutExtensions` (default): this works better with certain web publishing tools (e.g. GitHub pages)\n- `withExtensions`: this works better with standard markdown-based tools (e.g GitHub web UI)\n- `off`: this disables the generation of definitions\n\nAfter changing the setting in your workspace, you can run the `Foam: Run Janitor (Experimental)` command to convert all existing definitions.\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[get-started-with-vscode]: ../how-to/get-started-with-vscode.md \"Getting started with VsCode\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/features/wiki-links/","title":"Wiki Links"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Wiki Links\ntags:\n  - Link\n---\n\nWiki links are the internal links that connect the files in your knowledge base.\n\nTo create a wiki link use `[[` and type the name of another file in your repo, for example [[graph-visualization]]\n\nYou can also create a [[placeholder]].\nA placeholder is a wiki link that doesn't have a target file and a link to a placeholder is styled differently so you can easily tell them apart.\nThey can still be helpful to highlight connections.\n\nOpen the graph with `Foam: Show Graph` command, and look at the placeholder node.\n\nRemember, with `CTRL/CMD+click` on a wikilink you can navigate to the note, or create it (if the link is a placeholder).\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[graph-visualization]: graph-visualization.md \"Graph Visualization\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/features/tags-and-tag-explorer/","title":"Tags and Tag Explorer"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Tags and Tag Explorer\ntags: \n  - my-tag1\n  - my-tag2\n---\n\n\n## Tags\n\nYou can add tags to your notes to categorize them, or in any way you want.\n\nThere are two ways to add tags:\n- you can add #tags just by writing them in the note\n- another way is through [[note-properties]], as you can see at the top of this file\n\n## Tag Explorer\nIn the sidebar to the left, you will see a panel called `Tag Explorer`.\n\nYou can use this panel to see the tags in your notes, and navigate them.\n\nNotice `my-tag1` and `my-tag2`, which were added via [[note-properties]].\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[note-properties]: note-properties.md \"Note Properties\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/how-to/get-started-with-vscode/","title":"Getting started with VsCode"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Getting started with VsCode\ntags:\n  - How-to\n  - VsCode\n---\n\nVsCode is a powerful text editor, hidden behind a simple interface.\n\n## Keyboard shortcuts\nVsCode supports various **keyboard shortcuts**, the most important for us are:\n\n| Shortcut      | Action                       |\n| ------------- | ---------------------------- |\n| `cmd+N`       | create a new file            |\n| `cmd+S`       | save the current file        |\n| `cmd+O`       | open a file                  |\n| `cmd+P`       | use quickpick to open a file |\n| `cmd+shift+P` | invoke a command (see below) |\n\nFor more information, see the [vscode keyboard cheat sheets](https://code.visualstudio.com/docs/getstarted/keybindings#_keyboard-shortcuts-reference), where you can also see how to customize your keybindings.\n\n## Commands\nCommands make VsCode extremely powerful.\n\nTo invoke a command, press `cmd+shift+P` and select the command you want to execute.\nFor example, to see the Foam graph:\n- press `cmd+shift+P`\n- start typing `show graph`\n- select the `Foam: Show Graph` command\n\nAnd watch the magic unfold.\n\nFor more information on commands, see [commands on the VsCode site](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette).\n\n\nIf you want to learn more about VsCode, check out their [website](https://code.visualstudio.com/docs#first-steps).\n\n## Panels\n\nYou can see a few panels on the left, including:\n- `Outline`: this panel shows you the structure of the file based on the headings\n- `Tag Explorer`: This shows you the tags in your workspace, see [[tags-and-tag-explorer]] for more information on tags\n\n## Settings\n\nTo view or change the settings in VsCode, press `cmd+,`\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[tags-and-tag-explorer]: ../features/tags-and-tag-explorer.md \"Tags and Tag Explorer\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/how-to/paste-images-from-clipboard/","title":"Paste Images from Clipboard"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Paste Images from Clipboard\ntags:\n  - How-to\n  - VsCode\n---\n\n\nYou can paste an image from the clipboard with `cmd+alt+v`.\n\nImages are automatically copied to the `/attachments` folder and a reference is added in the file where you pasted them.\n\nA prompt will ask you to confirm the name of the image, to disable it set   `\"pasteImage.showFilePathConfirmInputBox\": false,` in the settings.\n\nTo change the location where the image is created, change the `pasteImage.path` property, e.g.:\n- `${currentFileDir}`: save the image next to the file\n- `${currentFileDir}/images`: create an `images` directory next to the file and save the image there\n\nFor more info check the [vscode-paste-image](https://github.com/mushanshitiancai/vscode-paste-image) extension page.\n"},{"fields":{"slug":"/blog/docs (example)/how-to/use-keyboard-shortcuts-for-editing/","title":"Use Keyboard Shortcuts for Editing"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Use Keyboard Shortcuts for Editing\ntags:\n  - Shortcut\n---\n\n\nHere are some keyboard shortcuts you'll love when editing your notes.\n\nThis works best if you can see the result in the preview panel, run the `Markdown: Open Preview to the Side` command.\n\n- [ ] `alt+c` changes state to a TODO item. Try it while the cursor is on this line.\n\n---\n\n- [ ] `cmd+b` makes the selection bold. Select me and make me bold.\n\n---\n\n- [ ] `cmd+i` makes the selection italic. Select me and make me italic.\n\n---\n\n- [ ] `alt+shift+f` formats a table. Place the cursor in the table below and format the table.\n\n| column 1 | column 2|\n|-|-|\n| one element | another element|\n| second row| last cell|\n\n---\n\n- [ ] Paste link on selected text\n  1. copy the following text: https://google.com\n  2. select me and paste\n\n---\n\n- [ ] Search in your repo with `cmd+shift+f`: type \"search\"\n  - (go back to the file explorer with `cmd+shift+e`)\n\n---\n\n- [ ] Paste an image\n  1. copy an image\n  2. move your cursor to the next line, then press `cmd+alt+v` and confirm the name of the file\n  3. .\n  4. the image file has been created in `/attachments` and a reference to it has been added here\n"},{"fields":{"slug":"/blog/docs (example)/how-to/write-notes-in-foam/","title":"Writing Notes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Writing Notes\ntags:\n  - Notes\n  - Writing\n---\n\nNotes are simple text files with some extra flavor, in the shape of Markdown syntax and support for extra properties (see [[note-properties]]).\n\n## Foam Syntax\n\nFoam uses standard markdown, with a few added twists:\n- the title of a note (e.g. in the [[graph-visualization]]) is given by precedence based on:\n  - the `title` property (see [[note-properties]])\n  - the first `# heading 1`  of the file\n  - the file name\n\n\n## Markdown Syntax\nWith markdown we can style our notes in a simple way, while keeping the document a simple text file (the best way to future-proof your writings!).\n\nYou can see the formatted output by running the `Markdown: Open Preview to the Side` command.\n\nHere is a high level overview of Markdown, for more information on the markdown syntax [see here](https://commonmark.org/help/).\n\nThis is a [link to google](https://www.google.com).\n\nThis is a wiki link (aka internal link) to [[note-properties]].\n\nHere is an image:\n![image](../../attachments/foam-icon.png)\n\n> this is a blockquote\n> it can span multiple lines\n\n- list item\n- list item\n- list item\n\n1. One\n2. Two\n3. Three\n\nThis text is **in bold** and this is *italic*.\n\nThe following is a horizontal rule\n\n---\n\nThis is a table:\n| Column 1 | Column 2 |\n| -------- | -------- |\n| R1C1     | R1C2     |\n| R2C1     | R2C2     |\n\nYou can `inline code` or\n```\nyou can create\ncode blocks\n```\n\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[note-properties]: ../features/note-properties.md \"Note Properties\"\n[graph-visualization]: ../features/graph-visualization.md \"Graph Visualization\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/blog/docs (example)/features/daily-notes/","title":"Daily Notes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Daily Notes\ntags:\n  - Notes\n  - Daily\n---\nDaily notes allow you to quickly create and access notes for today.\n\nTry it out, run the `Foam: Open Daily Note` command.\n\n## Shortcuts and Snippets\n\nYou can quickly open today's daily note by pressing `alt+d`.\nYou can also automatically open today's note via the `Foam ‚Ä∫ Open Daily Note: On Startup` setting.\n\nYou can also quickly create link to your daily notes, in the configured format, using [snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets).\n\nType `/today` and press `enter` to link to today's note.\nYou can also write:\n\n| Snippet      | Date          |\n| ------------ | ------------- |\n| `/tomorrow`  | tomorrow      |\n| `/yesterday` | yesterday     |\n| `/monday`    | next monday   |\n| `/+1d`       | tomorrow      |\n| `/-3d`       | 3 days ago    |\n| `/+1w`       | in a week     |\n| `/-1m`       | one month ago |\n| `/+1y`       | in one year   |\n\nYou get the idea ;)\n\n## Configuration\n\nIt's possible to customize path and heading of your daily notes, by following the [dateformat masking syntax](https://github.com/felixge/node-dateformat#mask-options).\nThe following properties can be used:\n```json\n  \"foam.openDailyNote.directory\": \"journal\",\n  \"foam.openDailyNote.filenameFormat\": \"'daily-note'-yyyy-mm-dd\",\n  \"foam.openDailyNote.fileExtension\": \"mdx\",\n  \"foam.openDailyNote.titleFormat\": \"'Journal Entry, ' dddd, mmmm d\",\n```\n\nThe above configuration would create a file `journal/daily-note-2020-07-25.mdx`, with the heading `Journal Entry, Sunday, July 25`.\n\n"},{"fields":{"slug":"/blog/docs (example)/features/note-templates/","title":"Note Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Note Templates\ntags:\n  - Templates\n---\n\n\nYou can create notes from templates by running the `Foam: Create New Note from Template` command and follow the instructions.\n\nTo create a template, just add regular `.md` files in `.foam/templates` (create the directory if necessary).\n\nTemplates can use all the variables available in [VsCode Snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables).\n\n"},{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"}]}}}